vnote_backup_file_826537664 D:/Vnote文档/lua/语法初学.md
# 1. 语法初学
**与python极为类似**
## 1.1. 回收条件
值为nil，或者将任意变量赋值为nil
## 1.2. 判断情况
除了false和nil外的所有值都为true，**即0和空字符串也为真**
## 1.3. 逻辑运算遵循短路原则
即如果第一个条件满足，则不会做第二部运算
如 i~=0 **and** a/i>b
不会出错，因为如果第一个条件不满足，则不会继续求第二个条件

and 如果第一个操作数为false，则返回第一个操作数，否则返回第二个
or 返回第一个不为false的值，否则返回false

## 1.4. 区分整型和浮点型
math.type()

## 1.5. 负数的取模运算
-180%360 ----> 180
### 1.5.1. 解释
a%q => a - ((a//q)*q)
即对a/q做了一个math.floor运算，结果向负无穷取整后，-180//360的结果为-0.5向负无穷取整，即结果为-1.则实际结果为

$$(-180)-(\lfloor -180÷360 \rfloor×360)=>(-180)-(-1×360)=>-180+360=180$$

## 1.6. 取整函数
math.floor 向负无穷取整
math.ceil 向正无穷取整
math.modf 向零取整

## 1.7. 最小值和最大值之间的替换
math.mininteger-1 = math.maxinteger
math.maxinteger+1 = math.mininteger
**这种特性叫回环**

## 1.8. 字符串
lua中字符串是不可变的，所有看似对原有字符串的修改，都是建立在新建一个新的字符串的基础上实现的
### 1.8.1. 获取长度
#string
### 1.8.2. 链接两个字符串
string **..** string
字符串连接总是**创建新的字符串**而不改变作为操作数的字符串
### 1.8.3. 长字符串/多行字符串

page = [[
    I'm a pig.
    I'm a piger.
]]

**如果遇到字符串内包含"[[" 或者 "]]"的情况可以使用**
[===[ ... ]===] 其中等号的数量左右相等，任意数量都可
此方式对注释依然有效
--[=[ ... ]=]

### 1.8.4. 冒号调用函数
s:sub(i,j) => string.sub(s,i,j)

## 1.9. 表
math.sin  其实是以“sin”为键值检索math表
**引用赋值**

将表中的任意元素赋值为nil即可将其删除，因为对于lua而言，全局变量也是以表的形式保存的

**表中的浮点型索引如果可以转换为整型，则会转换为整型**

默认构造器不能用负数初始化表

### 1.9.1. 表构造器
记录式构造器
{x = 0, y = 0} <--> {["x"] = 0, ["y"] = 0}
列表式构造器
{"r","g","b"} <--> {[1] = "r", [2] = "g", [3] = "b"}







