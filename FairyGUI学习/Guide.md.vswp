vnote_backup_file_826537664 D:/Vnote文档/FairyGUI学习/Guide.md
# 1. Guide
## 1.1. 元件 GObject
![](_v_images/20181218173008747_12909.png)

基础元件：图片、图形、动画、装载器、文本、富文本、组、组件。
组合型元件：标签、按钮、下拉框、滚动条、滑动条、进度条。
特殊元件：列表。
### 1.1.1. 获取元件的方式
定义元件的**名称**可以后期通过代码的GetChaild方法获取
### 1.1.2. 不建议
不建议在Unity 的开发中使用BlendMode和滤镜功能

## 1.2. 图片 GImage
### 1.2.1. 双击设置图片
![20170727152217](_v_images/20181218173427975_29044.png)

**导入**：导入替换图片
**允许平滑**：如果开发的是像素游戏，建议关闭平滑

### 1.2.2. 不建议
![](_v_images/20181218173651080_18630.png)
不建议在Laya中使用颜色及亮度调整  

### 1.2.3. 代码
UIPackage.CreateObject("包名","图片名").asImage;

## 1.3. 动画 GMovieClip
## 1.4. 图形 GGraph
### 1.4.1. 注意
图形支持动态创建，动态创建需要设置大小，否则加载不出来
``` Typescript
GGraph holder = new GGraph();
holder.SetSize(100, 100);
holder.DrawRect(...);
aComponent.AddChild(holder);
```

## 1.5. 装载器 GLoader
### 1.5.1. 注意
图形支持动态创建，动态创建需要设置大小，否则加载不出来
``` Typescript
GLoader aLoader = new GLoader();
aLoader.SetSize(100,100);
aLoader.url = "ui://包名/图片名";
```

## 1.6. 字体
### 1.6.1. 文本模板
使用文本模板功能，可以轻松解决这种需求。只需要在编辑器放置一个文本控件，文本为“我的元宝：{jin=100}金{yin=200}银”，然后勾选“使用文本模板”即可。这样在编辑器中显示依然是“我的元宝：100金200银”，运行时程序员只需要执行以下的代码就可以更新数值：

``` Typescript
aTextField.SetVar("jin", "500").SetVar("yin", "500").FlushVars();
```
也可以批量设置：

``` Typescript
Dictionary<string, string> values;
values["jin"] = "500";
values["yin"] = "500";
//注意，这种方式不需要再调用FlushVars
aTextField.templateVars = values;
```

## 1.7. 富文本 GRichTextField
### 1.7.1. 注意
支持动态创建，必须设置大小

文本中的链接点击是冒泡事件，可以被其父物体侦听

## 1.8. 组 GGroup
### 1.8.1. 普通组
发布后不存在
### 1.8.2. 高级组
发布后依然继续存在
并且可以设置如下属性
![](_v_images/20181218174754408_1156.png)

### 1.8.3. 注意
高级组的运用有效可以加快效率，如其中的布局功能

**必须注意，对于没有布局的高级组，运行时是不会自动改变大小的，也就是无论组内的元素怎么变动，这种高级组的大小是不会自动改变的！**

## 1.9. 组件 GComponent
